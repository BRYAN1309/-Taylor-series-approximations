# -*- coding: utf-8 -*-
"""AOL SCICOMP BryanThanaya - Taylor series

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sXzSRD-W-RHL9VwzC78SeDiKovom7Pp7
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures

# Provided monthly production data (M1 to M144)
production_data = [
    1863, 1614, 2570, 1685, 2101, 1811, 2457, 2171, 2134, 2502, 2358, 2399, 2048, 2523,
    2086, 2391, 2150, 2340, 3129, 2277, 2964, 2997, 2747, 2862, 3405, 2677, 2749, 2755,
    2963, 3161, 3623, 2768, 3141, 3439, 3601, 3531, 3477, 3376, 4027, 3175, 3274, 3334,
    3964, 3649, 3502, 3688, 3657, 4422, 4197, 4441, 4736, 4521, 4485, 4644, 5036, 4876,
    4789, 4544, 4975, 5211, 4880, 4933, 5079, 5339, 5232, 5520, 5714, 5260, 6110, 5334,
    5988, 6235, 6365, 6266, 6345, 6118, 6497, 6278, 6638, 6590, 6271, 7246, 6584, 6594,
    7092, 7326, 7409, 7976, 7959, 8012, 8195, 8008, 8313, 7791, 8368, 8933, 8756, 8613,
    8705, 9098, 8769, 9544, 9050, 9186, 10012, 9685, 9966, 10048, 10244, 10740, 10318,
    10393, 10986, 10635, 10731, 11749, 11849, 12123, 12274, 11666, 11960, 12629, 12915,
    13051, 13387, 13309, 13732, 13162, 13644, 13808, 14101, 13992, 15191, 15018, 14917,
    15046, 15556, 15893, 16388, 16782, 16716, 17033, 16896, 17689
]

# Create the feature and target arrays
months = np.arange(1, len(production_data) + 1).reshape(-1, 1)  # M1 to M144
production = np.array(production_data).reshape(-1, 1)

# Create polynomial features and fit the polynomial regression model
poly_degree = 4
poly_features = PolynomialFeatures(degree=poly_degree, include_bias=False)
months_poly = poly_features.fit_transform(months)

reg = LinearRegression()
reg.fit(months_poly, production)

# Predict values for plotting the polynomial trend
months_vals = np.linspace(1, len(production_data), 100).reshape(-1, 1)
months_vals_poly = poly_features.transform(months_vals)
production_vals = reg.predict(months_vals_poly)

# Get coefficients and intercept of the polynomial regression
coefficients = reg.coef_[0]
intercept = reg.intercept_[0]

# Calculate Taylor series approximation around the mean of months
mean_month = np.mean(months)
taylor_coeffs = np.zeros(poly_degree + 1)
taylor_coeffs[0] = intercept

for i in range(1, poly_degree + 1):
    taylor_coeffs[i] = coefficients[i - 1] / np.math.factorial(i)

# Compute Taylor series approximation
def taylor_series_approx(x, coeffs, x0):
    result = np.zeros_like(x)
    for i, coeff in enumerate(coeffs):
        result += coeff * (x - x0)**i
    return result

# Calculate Taylor series values
taylor_approximation = taylor_series_approx(months_vals, taylor_coeffs, mean_month)

# Plotting the results
plt.figure(figsize=(12, 8))
plt.scatter(months, production, label="Actual Production", color="b")
plt.plot(months_vals, production_vals, color="r", label="Polynomial Trend")
plt.plot(months_vals, taylor_approximation, color="g", linestyle="--", label="Taylor Series Approximation")
plt.xlabel('Month')
plt.ylabel('Bag Production')
plt.title('Bag Production Trend')
plt.legend()
plt.grid(True)
plt.show()

# Assess the accuracy by comparing coefficients
print(f"Coefficients of Polynomial Regression: {coefficients}")
print(f"Coefficients of Taylor Series Approximation: {taylor_coeffs}")